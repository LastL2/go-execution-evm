// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.28.2
// source: proto/execution.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayloadStatusV1_Status int32

const (
	PayloadStatusV1_VALID              PayloadStatusV1_Status = 0
	PayloadStatusV1_INVALID            PayloadStatusV1_Status = 1
	PayloadStatusV1_SYNCING            PayloadStatusV1_Status = 2
	PayloadStatusV1_ACCEPTED           PayloadStatusV1_Status = 3
	PayloadStatusV1_INVALID_BLOCK_HASH PayloadStatusV1_Status = 4
)

// Enum value maps for PayloadStatusV1_Status.
var (
	PayloadStatusV1_Status_name = map[int32]string{
		0: "VALID",
		1: "INVALID",
		2: "SYNCING",
		3: "ACCEPTED",
		4: "INVALID_BLOCK_HASH",
	}
	PayloadStatusV1_Status_value = map[string]int32{
		"VALID":              0,
		"INVALID":            1,
		"SYNCING":            2,
		"ACCEPTED":           3,
		"INVALID_BLOCK_HASH": 4,
	}
)

func (x PayloadStatusV1_Status) Enum() *PayloadStatusV1_Status {
	p := new(PayloadStatusV1_Status)
	*p = x
	return p
}

func (x PayloadStatusV1_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayloadStatusV1_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_execution_proto_enumTypes[0].Descriptor()
}

func (PayloadStatusV1_Status) Type() protoreflect.EnumType {
	return &file_proto_execution_proto_enumTypes[0]
}

func (x PayloadStatusV1_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayloadStatusV1_Status.Descriptor instead.
func (PayloadStatusV1_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{3, 0}
}

// ExecutionPayloadV1 maps to the ExecutionPayload structure of the beacon chain spec.
type ExecutionPayloadV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHash    []byte   `protobuf:"bytes,1,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`               // 32 Bytes
	FeeRecipient  []byte   `protobuf:"bytes,2,opt,name=fee_recipient,json=feeRecipient,proto3" json:"fee_recipient,omitempty"`         // 20 Bytes
	StateRoot     []byte   `protobuf:"bytes,3,opt,name=state_root,json=stateRoot,proto3" json:"state_root,omitempty"`                  // 32 Bytes
	ReceiptsRoot  []byte   `protobuf:"bytes,4,opt,name=receipts_root,json=receiptsRoot,proto3" json:"receipts_root,omitempty"`         // 32 Bytes
	LogsBloom     []byte   `protobuf:"bytes,5,opt,name=logs_bloom,json=logsBloom,proto3" json:"logs_bloom,omitempty"`                  // 256 Bytes
	PrevRandao    []byte   `protobuf:"bytes,6,opt,name=prev_randao,json=prevRandao,proto3" json:"prev_randao,omitempty"`               // 32 Bytes
	BlockNumber   uint64   `protobuf:"varint,7,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`           // 64 Bits
	GasLimit      uint64   `protobuf:"varint,8,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`                    // 64 Bits
	GasUsed       uint64   `protobuf:"varint,9,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`                       // 64 Bits
	Timestamp     uint64   `protobuf:"varint,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                 // 64 Bits
	ExtraData     []byte   `protobuf:"bytes,11,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`                 // 0 to 32 Bytes
	BaseFeePerGas []byte   `protobuf:"bytes,12,opt,name=base_fee_per_gas,json=baseFeePerGas,proto3" json:"base_fee_per_gas,omitempty"` // 256 Bits
	BlockHash     []byte   `protobuf:"bytes,13,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`                 // 32 Bytes
	Transactions  [][]byte `protobuf:"bytes,14,rep,name=transactions,proto3" json:"transactions,omitempty"`                            // Array of transaction bytes
}

func (x *ExecutionPayloadV1) Reset() {
	*x = ExecutionPayloadV1{}
	mi := &file_proto_execution_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionPayloadV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionPayloadV1) ProtoMessage() {}

func (x *ExecutionPayloadV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionPayloadV1.ProtoReflect.Descriptor instead.
func (*ExecutionPayloadV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{0}
}

func (x *ExecutionPayloadV1) GetParentHash() []byte {
	if x != nil {
		return x.ParentHash
	}
	return nil
}

func (x *ExecutionPayloadV1) GetFeeRecipient() []byte {
	if x != nil {
		return x.FeeRecipient
	}
	return nil
}

func (x *ExecutionPayloadV1) GetStateRoot() []byte {
	if x != nil {
		return x.StateRoot
	}
	return nil
}

func (x *ExecutionPayloadV1) GetReceiptsRoot() []byte {
	if x != nil {
		return x.ReceiptsRoot
	}
	return nil
}

func (x *ExecutionPayloadV1) GetLogsBloom() []byte {
	if x != nil {
		return x.LogsBloom
	}
	return nil
}

func (x *ExecutionPayloadV1) GetPrevRandao() []byte {
	if x != nil {
		return x.PrevRandao
	}
	return nil
}

func (x *ExecutionPayloadV1) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

func (x *ExecutionPayloadV1) GetGasLimit() uint64 {
	if x != nil {
		return x.GasLimit
	}
	return 0
}

func (x *ExecutionPayloadV1) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *ExecutionPayloadV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ExecutionPayloadV1) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *ExecutionPayloadV1) GetBaseFeePerGas() []byte {
	if x != nil {
		return x.BaseFeePerGas
	}
	return nil
}

func (x *ExecutionPayloadV1) GetBlockHash() []byte {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *ExecutionPayloadV1) GetTransactions() [][]byte {
	if x != nil {
		return x.Transactions
	}
	return nil
}

// ForkchoiceStateV1 encapsulates the fork choice state.
type ForkchoiceStateV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadBlockHash      []byte `protobuf:"bytes,1,opt,name=head_block_hash,json=headBlockHash,proto3" json:"head_block_hash,omitempty"`                // 32 Bytes
	SafeBlockHash      []byte `protobuf:"bytes,2,opt,name=safe_block_hash,json=safeBlockHash,proto3" json:"safe_block_hash,omitempty"`                // 32 Bytes
	FinalizedBlockHash []byte `protobuf:"bytes,3,opt,name=finalized_block_hash,json=finalizedBlockHash,proto3" json:"finalized_block_hash,omitempty"` // 32 Bytes
}

func (x *ForkchoiceStateV1) Reset() {
	*x = ForkchoiceStateV1{}
	mi := &file_proto_execution_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForkchoiceStateV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkchoiceStateV1) ProtoMessage() {}

func (x *ForkchoiceStateV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkchoiceStateV1.ProtoReflect.Descriptor instead.
func (*ForkchoiceStateV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{1}
}

func (x *ForkchoiceStateV1) GetHeadBlockHash() []byte {
	if x != nil {
		return x.HeadBlockHash
	}
	return nil
}

func (x *ForkchoiceStateV1) GetSafeBlockHash() []byte {
	if x != nil {
		return x.SafeBlockHash
	}
	return nil
}

func (x *ForkchoiceStateV1) GetFinalizedBlockHash() []byte {
	if x != nil {
		return x.FinalizedBlockHash
	}
	return nil
}

// PayloadAttributesV1 contains attributes required to initiate a payload build process.
type PayloadAttributesV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp             uint64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                       // 64 Bits
	PrevRandao            []byte `protobuf:"bytes,2,opt,name=prev_randao,json=prevRandao,proto3" json:"prev_randao,omitempty"`                                    // 32 Bytes
	SuggestedFeeRecipient []byte `protobuf:"bytes,3,opt,name=suggested_fee_recipient,json=suggestedFeeRecipient,proto3" json:"suggested_fee_recipient,omitempty"` // 20 Bytes
}

func (x *PayloadAttributesV1) Reset() {
	*x = PayloadAttributesV1{}
	mi := &file_proto_execution_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadAttributesV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadAttributesV1) ProtoMessage() {}

func (x *PayloadAttributesV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadAttributesV1.ProtoReflect.Descriptor instead.
func (*PayloadAttributesV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{2}
}

func (x *PayloadAttributesV1) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *PayloadAttributesV1) GetPrevRandao() []byte {
	if x != nil {
		return x.PrevRandao
	}
	return nil
}

func (x *PayloadAttributesV1) GetSuggestedFeeRecipient() []byte {
	if x != nil {
		return x.SuggestedFeeRecipient
	}
	return nil
}

// PayloadStatusV1 contains the result of processing a payload.
type PayloadStatusV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          PayloadStatusV1_Status `protobuf:"varint,1,opt,name=status,proto3,enum=execution.v1.PayloadStatusV1_Status" json:"status,omitempty"`
	LatestValidHash []byte                 `protobuf:"bytes,2,opt,name=latest_valid_hash,json=latestValidHash,proto3" json:"latest_valid_hash,omitempty"` // 32 Bytes or 0x00...00
	ValidationError string                 `protobuf:"bytes,3,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`   // Nullable string
}

func (x *PayloadStatusV1) Reset() {
	*x = PayloadStatusV1{}
	mi := &file_proto_execution_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayloadStatusV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayloadStatusV1) ProtoMessage() {}

func (x *PayloadStatusV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayloadStatusV1.ProtoReflect.Descriptor instead.
func (*PayloadStatusV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{3}
}

func (x *PayloadStatusV1) GetStatus() PayloadStatusV1_Status {
	if x != nil {
		return x.Status
	}
	return PayloadStatusV1_VALID
}

func (x *PayloadStatusV1) GetLatestValidHash() []byte {
	if x != nil {
		return x.LatestValidHash
	}
	return nil
}

func (x *PayloadStatusV1) GetValidationError() string {
	if x != nil {
		return x.ValidationError
	}
	return ""
}

// ForkchoiceUpdatedResponseV1 is the response for engine_forkchoiceUpdatedV1.
type ForkchoiceUpdatedResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadStatus *PayloadStatusV1 `protobuf:"bytes,1,opt,name=payload_status,json=payloadStatus,proto3" json:"payload_status,omitempty"`
	PayloadId     []byte           `protobuf:"bytes,2,opt,name=payload_id,json=payloadId,proto3" json:"payload_id,omitempty"` // 8 Bytes or null
}

func (x *ForkchoiceUpdatedResponseV1) Reset() {
	*x = ForkchoiceUpdatedResponseV1{}
	mi := &file_proto_execution_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForkchoiceUpdatedResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkchoiceUpdatedResponseV1) ProtoMessage() {}

func (x *ForkchoiceUpdatedResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkchoiceUpdatedResponseV1.ProtoReflect.Descriptor instead.
func (*ForkchoiceUpdatedResponseV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{4}
}

func (x *ForkchoiceUpdatedResponseV1) GetPayloadStatus() *PayloadStatusV1 {
	if x != nil {
		return x.PayloadStatus
	}
	return nil
}

func (x *ForkchoiceUpdatedResponseV1) GetPayloadId() []byte {
	if x != nil {
		return x.PayloadId
	}
	return nil
}

// GetPayloadRequestV1 is the request for engine_getPayloadV1.
type GetPayloadRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayloadId []byte `protobuf:"bytes,1,opt,name=payload_id,json=payloadId,proto3" json:"payload_id,omitempty"` // 8 Bytes
}

func (x *GetPayloadRequestV1) Reset() {
	*x = GetPayloadRequestV1{}
	mi := &file_proto_execution_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPayloadRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPayloadRequestV1) ProtoMessage() {}

func (x *GetPayloadRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPayloadRequestV1.ProtoReflect.Descriptor instead.
func (*GetPayloadRequestV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{5}
}

func (x *GetPayloadRequestV1) GetPayloadId() []byte {
	if x != nil {
		return x.PayloadId
	}
	return nil
}

// ForkchoiceUpdatedRequestV1 is the request for engine_forkchoiceUpdatedV1.
type ForkchoiceUpdatedRequestV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkchoiceState *ForkchoiceStateV1 `protobuf:"bytes,1,opt,name=forkchoice_state,json=forkchoiceState,proto3" json:"forkchoice_state,omitempty"`
	// Types that are assignable to PayloadAttributes:
	//
	//	*ForkchoiceUpdatedRequestV1_PayloadAttributesData
	//	*ForkchoiceUpdatedRequestV1_Empty
	PayloadAttributes isForkchoiceUpdatedRequestV1_PayloadAttributes `protobuf_oneof:"payload_attributes"`
}

func (x *ForkchoiceUpdatedRequestV1) Reset() {
	*x = ForkchoiceUpdatedRequestV1{}
	mi := &file_proto_execution_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ForkchoiceUpdatedRequestV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ForkchoiceUpdatedRequestV1) ProtoMessage() {}

func (x *ForkchoiceUpdatedRequestV1) ProtoReflect() protoreflect.Message {
	mi := &file_proto_execution_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ForkchoiceUpdatedRequestV1.ProtoReflect.Descriptor instead.
func (*ForkchoiceUpdatedRequestV1) Descriptor() ([]byte, []int) {
	return file_proto_execution_proto_rawDescGZIP(), []int{6}
}

func (x *ForkchoiceUpdatedRequestV1) GetForkchoiceState() *ForkchoiceStateV1 {
	if x != nil {
		return x.ForkchoiceState
	}
	return nil
}

func (m *ForkchoiceUpdatedRequestV1) GetPayloadAttributes() isForkchoiceUpdatedRequestV1_PayloadAttributes {
	if m != nil {
		return m.PayloadAttributes
	}
	return nil
}

func (x *ForkchoiceUpdatedRequestV1) GetPayloadAttributesData() *PayloadAttributesV1 {
	if x, ok := x.GetPayloadAttributes().(*ForkchoiceUpdatedRequestV1_PayloadAttributesData); ok {
		return x.PayloadAttributesData
	}
	return nil
}

func (x *ForkchoiceUpdatedRequestV1) GetEmpty() *emptypb.Empty {
	if x, ok := x.GetPayloadAttributes().(*ForkchoiceUpdatedRequestV1_Empty); ok {
		return x.Empty
	}
	return nil
}

type isForkchoiceUpdatedRequestV1_PayloadAttributes interface {
	isForkchoiceUpdatedRequestV1_PayloadAttributes()
}

type ForkchoiceUpdatedRequestV1_PayloadAttributesData struct {
	PayloadAttributesData *PayloadAttributesV1 `protobuf:"bytes,2,opt,name=payload_attributes_data,json=payloadAttributesData,proto3,oneof"`
}

type ForkchoiceUpdatedRequestV1_Empty struct {
	Empty *emptypb.Empty `protobuf:"bytes,3,opt,name=empty,proto3,oneof"`
}

func (*ForkchoiceUpdatedRequestV1_PayloadAttributesData) isForkchoiceUpdatedRequestV1_PayloadAttributes() {
}

func (*ForkchoiceUpdatedRequestV1_Empty) isForkchoiceUpdatedRequestV1_PayloadAttributes() {}

var File_proto_execution_proto protoreflect.FileDescriptor

var file_proto_execution_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe2, 0x03, 0x0a, 0x12, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x31, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x65,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0c, 0x66, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x73, 0x52,
	0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x73, 0x5f, 0x62, 0x6c, 0x6f, 0x6f,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x73, 0x42, 0x6c, 0x6f,
	0x6f, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x61,
	0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76, 0x52, 0x61, 0x6e,
	0x64, 0x61, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x73, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x67, 0x61, 0x73, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x10, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x67, 0x61, 0x73, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x50, 0x65,
	0x72, 0x47, 0x61, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x61, 0x73, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x11, 0x46, 0x6f, 0x72, 0x6b,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x31, 0x12, 0x26, 0x0a,
	0x0f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x68, 0x65, 0x61, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x61, 0x66, 0x65, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x73, 0x61, 0x66, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a,
	0x14, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x22,
	0x8c, 0x01, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x56, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x72, 0x61,
	0x6e, 0x64, 0x61, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x76,
	0x52, 0x61, 0x6e, 0x64, 0x61, 0x6f, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73,
	0x74, 0x65, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74,
	0x65, 0x64, 0x46, 0x65, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xfb,
	0x01, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x56, 0x31, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x56,
	0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x6c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x48, 0x61, 0x73, 0x68, 0x12, 0x29, 0x0a, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x53, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e,
	0x43, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54,
	0x45, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x42, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x10, 0x04, 0x22, 0x82, 0x01, 0x0a,
	0x1b, 0x46, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x44, 0x0a, 0x0e,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x56, 0x31, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49,
	0x64, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x64, 0x22, 0x8b, 0x02, 0x0a, 0x1a, 0x46, 0x6f, 0x72, 0x6b,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x12, 0x4a, 0x0a, 0x10, 0x66, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56,
	0x31, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x5b, 0x0a, 0x17, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x56, 0x31, 0x48, 0x00, 0x52, 0x15, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2e, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x14, 0x0a, 0x12, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x32, 0xb9, 0x02, 0x0a, 0x10, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x5f, 0x6e, 0x65, 0x77, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x31, 0x12, 0x20, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x56, 0x31, 0x1a, 0x1d, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x56, 0x31, 0x12, 0x71, 0x0a, 0x1a, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f, 0x66, 0x6f, 0x72,
	0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x56, 0x31,
	0x12, 0x28, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x46, 0x6f, 0x72, 0x6b, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a, 0x29, 0x2e, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x6f, 0x72, 0x6b, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x56, 0x31, 0x12, 0x5a, 0x0a, 0x13, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x67, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x31, 0x12, 0x21, 0x2e, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x56, 0x31, 0x1a,
	0x20, 0x2e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x56,
	0x31, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x6f, 0x6c, 0x6c, 0x6b, 0x69, 0x74, 0x2f, 0x67, 0x6f, 0x2d, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x2d, 0x65, 0x76, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x76,
	0x31, 0x3b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_execution_proto_rawDescOnce sync.Once
	file_proto_execution_proto_rawDescData = file_proto_execution_proto_rawDesc
)

func file_proto_execution_proto_rawDescGZIP() []byte {
	file_proto_execution_proto_rawDescOnce.Do(func() {
		file_proto_execution_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_execution_proto_rawDescData)
	})
	return file_proto_execution_proto_rawDescData
}

var file_proto_execution_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_execution_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_execution_proto_goTypes = []any{
	(PayloadStatusV1_Status)(0),         // 0: execution.v1.PayloadStatusV1.Status
	(*ExecutionPayloadV1)(nil),          // 1: execution.v1.ExecutionPayloadV1
	(*ForkchoiceStateV1)(nil),           // 2: execution.v1.ForkchoiceStateV1
	(*PayloadAttributesV1)(nil),         // 3: execution.v1.PayloadAttributesV1
	(*PayloadStatusV1)(nil),             // 4: execution.v1.PayloadStatusV1
	(*ForkchoiceUpdatedResponseV1)(nil), // 5: execution.v1.ForkchoiceUpdatedResponseV1
	(*GetPayloadRequestV1)(nil),         // 6: execution.v1.GetPayloadRequestV1
	(*ForkchoiceUpdatedRequestV1)(nil),  // 7: execution.v1.ForkchoiceUpdatedRequestV1
	(*emptypb.Empty)(nil),               // 8: google.protobuf.Empty
}
var file_proto_execution_proto_depIdxs = []int32{
	0, // 0: execution.v1.PayloadStatusV1.status:type_name -> execution.v1.PayloadStatusV1.Status
	4, // 1: execution.v1.ForkchoiceUpdatedResponseV1.payload_status:type_name -> execution.v1.PayloadStatusV1
	2, // 2: execution.v1.ForkchoiceUpdatedRequestV1.forkchoice_state:type_name -> execution.v1.ForkchoiceStateV1
	3, // 3: execution.v1.ForkchoiceUpdatedRequestV1.payload_attributes_data:type_name -> execution.v1.PayloadAttributesV1
	8, // 4: execution.v1.ForkchoiceUpdatedRequestV1.empty:type_name -> google.protobuf.Empty
	1, // 5: execution.v1.ExecutionService.engine_newPayloadV1:input_type -> execution.v1.ExecutionPayloadV1
	7, // 6: execution.v1.ExecutionService.engine_forkchoiceUpdatedV1:input_type -> execution.v1.ForkchoiceUpdatedRequestV1
	6, // 7: execution.v1.ExecutionService.engine_getPayloadV1:input_type -> execution.v1.GetPayloadRequestV1
	4, // 8: execution.v1.ExecutionService.engine_newPayloadV1:output_type -> execution.v1.PayloadStatusV1
	5, // 9: execution.v1.ExecutionService.engine_forkchoiceUpdatedV1:output_type -> execution.v1.ForkchoiceUpdatedResponseV1
	1, // 10: execution.v1.ExecutionService.engine_getPayloadV1:output_type -> execution.v1.ExecutionPayloadV1
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_execution_proto_init() }
func file_proto_execution_proto_init() {
	if File_proto_execution_proto != nil {
		return
	}
	file_proto_execution_proto_msgTypes[6].OneofWrappers = []any{
		(*ForkchoiceUpdatedRequestV1_PayloadAttributesData)(nil),
		(*ForkchoiceUpdatedRequestV1_Empty)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_execution_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_execution_proto_goTypes,
		DependencyIndexes: file_proto_execution_proto_depIdxs,
		EnumInfos:         file_proto_execution_proto_enumTypes,
		MessageInfos:      file_proto_execution_proto_msgTypes,
	}.Build()
	File_proto_execution_proto = out.File
	file_proto_execution_proto_rawDesc = nil
	file_proto_execution_proto_goTypes = nil
	file_proto_execution_proto_depIdxs = nil
}
